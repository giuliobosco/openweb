/*
 * The MIT License
 *
 * Copyright 2019 giuliobosco.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

/**
 * Http request attribute.
 * Contains the name of the attribute and his value.
 *
 * @author giuliobosco
 * @version 1.0 (2019-02-03)
 */
public class HttpRequestAttribute {
    // ------------------------------------------------------------------------------------ Costants

    public static final String ATTRIBUTE_DIVIDER = "?";

    public static final String ATTRIBUTE_ASSIGNRE = "=";

    // ---------------------------------------------------------------------------------- Attributes

    /**
     * Http request attribute name.
     */
    private String name;

    /**
     * Http request attribute value.
     */
    private String value;

    // --------------------------------------------------------------------------- Getters & Setters

    /**
     * Get the http request attribute name.
     *
     * @return Http request attribute name.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Get the http request attribute value.
     *
     * @return Http request attribute value.
     */
    public String getValue() {
        return this.value;
    }

    // -------------------------------------------------------------------------------- Constructors

    /**
     * Create the http request attribute with the name and value of the attribute.
     *
     * @param name  Http request attribute name.
     * @param value Http request attribute value.
     */
    public HttpRequestAttribute(String name, String value) {
        this.name = name;
        this.value = value;
    }

    /**
     * Create the http request attribute with the attribute string of the http request URL.
     * The attribute string must be like "name=value".
     *
     * @param httpValue Attribute string.
     */
    public HttpRequestAttribute(String httpValue) {
        String[] httpValues = httpValue.split(ATTRIBUTE_ASSIGNRE);
        if (httpValue.length() > 1) {
            this.name = httpValues[0];
            this.value = httpValues[1];
        }
    }

    // -------------------------------------------------------------------------------- Help Methods
    // ----------------------------------------------------------------------------- General Methods
    // --------------------------------------------------------------------------- Static Components

    /**
     * Get all attributes from array of http request attribute strings.
     * The array must be like ["name=value", "name2=value2"].
     *
     * @param httpAttributes Array of http attribute string.
     * @return Array of http request attributes generated by the string array.
     */
    public static HttpRequestAttribute[] getAttribute(String[] httpAttributes) {
        HttpRequestAttribute[] attributes = new HttpRequestAttribute[httpAttributes.length];

        for (int i = 0; i < attributes.length; i++) {
            attributes[i] = new HttpRequestAttribute(httpAttributes[i]);
        }

        return attributes;
    }

    /**
     * Get all attributes from string of http request attribute.
     * The string must be like "name=value&name1=value1".
     *
     * @param httpAttributes String of http request attribute.
     * @return Array of http request attribute generated by the string.
     */
    public static HttpRequestAttribute[] getAttribute(String httpAttributes) {
        return getAttribute(httpAttributes.split(ATTRIBUTE_DIVIDER));
    }

}
